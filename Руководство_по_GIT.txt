Руководство по GIT

1. GIT имеет 3 директории:
	- Рабочая (Working Directory);
	- Область подготовленных файлов (Staging Area, Index);
	- Репозиторий (.git directory).

2. Для того, чтобы посмотреть свои настройки:
$ git config --list

3. Для установки глобального редактора:
$ git config --global core.editor nano

4. Для создания проекта:
$ cd /home/lyzv/work/prj/qt/ksu
$ git init

5. Клонирование репозитория:
$ git clone https://gitlab.com/LyzV/ksu.git

6. Файлы проекта могут быть:
	- неотслеживаемые (untracked)
	- не изменённые (unmodidied)
	- изменённые (modified)
	- подготовленные к коммиту (staged)

7. Определение состояния файлов проекта:
$ git status

8. Что-бы добавить файл README под версионный контроль:
$ git add README

9. Коротко и ясно определить статус файлов можно:
$ git status -s
	- ??(красным) - неверсионные файлы
	- A(зелёным) новые файлы, добавленные в индекс
	- M(красным) версионные изменённые и не добавленные в индекс
	- M(зелёным) версионные изменённые и добавленные в индекс
	- MM(зелёным,красным) версионные изменённые и добавленные в индекс, а затем опять изменённые
	- AM(зелёным,красным) новые файлы добавленные в индекс, а затем изменённые

10. Чтобы GIT игнорировал файлы и даже каталоги необходимо использовать .gitignore файл. В нём
    указать построчно шаблоны файлов для игнорирования:
*.[oa]
ksu_data/
*~

11. Чтобы посмотреть различия между файлами в рабочей директории и файлами в индексе:
$ git diff
	Покажет изменения во всех файлах. Если нужны изменения в конкретном файле README:
$ git diff README

12. Чтобы посмотреть различия между файлами в индексе (staged) и последним коммитом (репозитории):
$ git diff --staged
или
$ git diff --cached
	--staged и --cached - синонимы.

13. Чтобы выполнить коммит индекса:
$ git commit -m "Modifies file Руководство_по_GIT.txt"

14. Чтобы удалить файл README из индекса:
$ git rm --cached README

15. Чтобы удалить целый каталог из индекса:
$ git rm -r --cached folder/